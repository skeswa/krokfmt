# Multi-stage Dockerfile for krokfmt-web (static VitePress site with WASM)

# Stage 1: Build Rust WASM module
FROM rust:1.83-slim AS rust-builder

RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install wasm-pack
RUN curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

# Add wasm32 target
RUN rustup target add wasm32-unknown-unknown

WORKDIR /app

# Copy only what's needed for WASM build
COPY Cargo.toml Cargo.lock ./
COPY crates/krokfmt/Cargo.toml crates/krokfmt/
COPY crates/krokfmt/src crates/krokfmt/src
COPY crates/krokfmt-playground/Cargo.toml crates/krokfmt-playground/
COPY crates/krokfmt-playground/src crates/krokfmt-playground/src

# Build WASM module
RUN cd crates/krokfmt-playground && \
    wasm-pack build --target web --out-dir pkg --release

# Stage 2: Build VitePress documentation
FROM node:20-alpine AS node-builder

WORKDIR /app

# Copy package files
COPY crates/krokfmt-web/package*.json ./
RUN npm ci

# Copy VitePress files
COPY crates/krokfmt-web/ ./

# Copy WASM files from rust-builder
COPY --from=rust-builder /app/crates/krokfmt-playground/pkg ./docs/public/wasm

# Build VitePress site
RUN npm run build

# Stage 3: Minimal nginx for static hosting
FROM nginx:alpine

# Copy built static site
COPY --from=node-builder /app/docs/.vitepress/dist /usr/share/nginx/html

# Simple nginx config for SPA
RUN echo 'server { \
    listen 80; \
    server_name localhost; \
    root /usr/share/nginx/html; \
    index index.html; \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
    location ~* \\.wasm$ { \
        add_header Content-Type application/wasm; \
    } \
    gzip on; \
    gzip_types text/plain text/css text/javascript application/javascript application/json application/wasm; \
}' > /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]