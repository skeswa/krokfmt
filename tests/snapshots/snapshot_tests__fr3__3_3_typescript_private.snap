---
source: tests/snapshot_tests.rs
expression: output
---
// FR3.3: Test TypeScript visibility keywords (private, protected, public)

class TypeScriptVisibility {
    protected static staticProtected = 'static protected';
    public static staticPublic = 'static public';

    static readonly staticReadonly = 'static readonly';

    private static staticTsPrivate = 'static ts private';

    static #staticTruePrivate = 'static true private';

    protected static staticProtectedMethod() {
        return 'static protected';
    }
    public static staticPublicMethod() {
        return 'static public';
    }

    private static staticTsPrivateMethod() {
        return 'static ts private';
    }

    static #staticTruePrivateMethod() {
        return 'static true private';
    }

    implicitPublic = 'implicit';
    protected protectedField = 'protected';
    public publicField = 'public';
    readonly readonlyField = 'readonly';

    private tsPrivateField = 'ts private';
    #truePrivate = 'true private';

    constructor(private ctorPrivate: string, protected ctorProtected: string, public ctorPublic: string, readonly ctorReadonly: string){}

    implicitPublicMethod() {
        return 'implicit public';
    }
    protected protectedMethod() {
        return 'protected method';
    }
    public publicMethod() {
        return 'public method';
    }

    private tsPrivateMethod() {
        return 'ts private method';
    }
    #truePrivateMethod() {
        return 'true private method';
    }
}
