---
source: tests/snapshot_tests.rs
expression: output
---
// Class inheritance with mixed visibility
// FR2.2: Complex export prioritization with dependencies

class BaseClass {
    protected value = 10;
}
class ExtendedClass extends MiddleClass {
    doubleValue() {
        return this.getValue() * 2;
    }
}
// Deep dependency chain
const level1 = 'base';
const level2 = level1 + '_extended';
const level3 = level2 + '_final';
// Interleaved exports and non-exports
const privateA = 1;
const privateB = publicA + 1;
const privateC = publicB + 1;
export class FinalClass extends ExtendedClass {
    tripleValue() {
        return this.doubleValue() + this.getValue();
    }
}
export class MiddleClass extends BaseClass {
    getValue() {
        return this.value;
    }
}
export function finalPublicFunction() {
    return usesPublicHelper();
}
export const publicA = privateA * 2;
export const publicB = privateB * 2;
export const publicC = privateC * 2;
export function publicHelper() {
    return privateHelper() * 2;
}
export const publicLevel3 = level3;
// Mixed private and public chain
function privateHelper() {
    return 42;
}
function usesPublicHelper() {
    return publicHelper() + 10;
}
